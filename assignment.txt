**1) Question

root@SHIVAAY:/bin# cd ..
root@SHIVAAY:/# ls
bin   c1       data.txt  dss  home  krushna  lib32  libx32  media  om   proc   root  sat3.txt  sat5.txt  snap  sys  usr
boot  cdacdir  dev       etc  init  lib      lib64  m-a     mnt    opt  ramlu  run   sat4.txt  sbin      srv   tmp  var
root@SHIVAAY:/# pwd
/
root@SHIVAAY:/# cd home/
root@SHIVAAY:/home# ls -l
total 0
drwxr-xr-x 1 cdac_kh cdac_kh 4096 Mar 10 16:12 cdac_kh
drwxr-xr-x 1 root    root    4096 Mar  9 15:56 krushna
root@SHIVAAY:/home# cd ..
root@SHIVAAY:/# cd bin/
root@SHIVAAY:/bin# ls -a

2)
root@SHIVAAY:/# mkdir cdac-dir
root@SHIVAAY:/# rmdir cdac-dir
root@SHIVAAY:/# ls
bin   c1        data.txt  dss  home  kru      lib    lib64   m-a    mnt  opt   ramlu  run       sat4.txt  sbin  srv  tmp  var
boot  cdac.dir  dev       etc  init  krushna  lib32  libx32  media  om   proc  root   sat3.txt  sat5.txt  snap  sys  usr
root@SHIVAAY:/# mkdir cdac
root@SHIVAAY:/# cd cdac
root@SHIVAAY:/cdac#


 .
3)
root@SHIVAAY:/bin# cd ..
root@SHIVAAY:/# mkdir cdac.dir
root@SHIVAAY:/# ls
bin   c1        cdacdir   dev  etc   init     lib    lib64   m-a    mnt  opt   ramlu  run       sat4.txt  sbin  srv  tmp  var
boot  cdac.dir  data.txt  dss  home  krushna  lib32  libx32  media  om   proc  root   sat3.txt  sat5.txt  snap  sys  usr
root@SHIVAAY:/# cd cdac.dir
root@SHIVAAY:/cdac.dir# mkdir -p a1/b1
root@SHIVAAY:/cdac.dir# mkdir -p a1/b2
root@SHIVAAY:/cdac.dir# mkdir -p a2/c1
root@SHIVAAY:/cdac.dir# mkdir -p a2/c2
root@SHIVAAY:/cdac.dir# tree
.
├── a1
│   ├── b1
│   └── b2
└── a2
    ├── c1
    └── c2

6 directories, 0 files
root@SHIVAAY:/cdac.dir#


root@SHIVAAY:/# rm -rf cdacdir
root@SHIVAAY:/# mkdir cdacdir
root@SHIVAAY:/# cd cdacdir
root@SHIVAAY:/cdacdir# mkdir -p a1/b1/c1
root@SHIVAAY:/cdacdir# mkdir -p a2/b2/c2
root@SHIVAAY:/cdacdir# tree
.
├── a1
│   └── b1
│       └── c1
└── a2
    └── b2
        └── c2

6 directories, 0 files
root@SHIVAAY:/cdacdir#

4)

6 directories, 0 files
root@SHIVAAY:/cdacdir# cd ..
root@SHIVAAY:/# rm -rf cdacdir
root@SHIVAAY:/# ls
bin   c1        data.txt  dss  home  kru      lib    lib64   m-a    mnt  opt   ramlu  run       sat4.txt  sbin  srv  tmp  var
boot  cdac.dir  dev       etc  init  krushna  lib32  libx32  media  om   proc  root   sat3.txt  sat5.txt  snap  sys  usr
ro

**2) Question
1.


2.
root@SHIVAAY:/# cd cdac
root@SHIVAAY:/cdac# cd ..
root@SHIVAAY:/# cat > temp.txt
hii
my name
is
krushna
i
like so
many
things
such as
reading
novels
and
root@SHIVAAY:/# cat temp.txt
hii
my name
is
krushna
i
like so
many
things
such as
reading
novels
and
root@SHIVAAY:/# head -n5 temp.txt
hii
my name
is
krushna
i
root@SHIVAAY:/# tail -n3 temp.txt
reading
novels
and
root@SHIVAAY:/# cd cdac/
root@SHIVAAY:/cdac# cat > temp.txt
hii
my name
is
krushna
i likr
so many
things
to do my
in
my
life
hey
hello
root@SHIVAAY:/cdac# head -n10 temp.txt
hii
my name
is
krushna
i likr
so many
things
to do my
in
my
root@SHIVAAY:/cdac# head -n5 temp.txt
hii
my name
is
krushna
i likr
root@SHIVAAY:/cdac# tail -n10 temp.txt
krushna
i likr
so many
things
to do my
in
my
life
hey
hello
root@SHIVAAY:/cdac# tail -n5 temp.txt
in
my
life
hey
hello
root@SHIVAAY:/cdac#

3)
root@SHIVAAY:/# cd ramlu/
root@SHIVAAY:/ramlu# ls
masss.txt
root@SHIVAAY:/ramlu# rm masss.txt
root@SHIVAAY:/ramlu# ls
root@SHIVAAY:/ramlu# ls
root@SHIVAAY:/ramlu# cp ramlu temp.txt
cp: cannot stat 'ramlu': No such file or directory
root@SHIVAAY:/ramlu# cd ramlu temp.txt
bash: cd: too many arguments
root@SHIVAAY:/ramlu# cd ..
root@SHIVAAY:/# cp temp.txt ramlu
root@SHIVAAY:/# cd ramlu
root@SHIVAAY:/ramlu# ls
temp.txt
root@SHIVAAY:/ramlu# mv temp.txt mass.txt
root@SHIVAAY:/ramlu# ls
mass.txt
root@SHIVAAY:/ramlu#

4)
root@SHIVAAY:/# mkdir file1
root@SHIVAAY:/# cd file1
root@SHIVAAY:/file1# cat > file222.txt
hii
my
name
is
krushna
casd
badf
car
cat
nim
mig
root@SHIVAAY:/file1# wc -l file222.txt
11 file222.txt
root@SHIVAAY:/file1# wc -w file222.txt
11 file222.txt
root@SHIVAAY:/file1# wc -m file222.txt
49 file222.txt

5)
root@SHIVAAY:/file1# history 10
  479  ls
  480  clear
  481  cd ..
  482  mkdir file1
  483  cd file1
  484  cat > file222.txt
  485  wc -l file222.txt
  486  wc -w file222.txt
  487  wc -m file222.txt
  488  history 10
root@SHIVAAY:/file1#


**3) Question
1)
root@SHIVAAY:/krushna# ls
file.tar  file1.txt  temp.text
root@SHIVAAY:/krushna# tar cf file1.tar file1.txt
root@SHIVAAY:/krushna# ls
file.tar  file1.tar  file1.txt  temp.txt
root@SHIVAAY:/krushna# ls
file.tar  file1.tar  file1.txt  temp.txt
root@SHIVAAY:/krushna# tar cf temp.tar temp.txt
file.tar  file1.tar  file1.txt  temp.tar  temp.txt


2)
root@SHIVAAY:/# mkdir folder1
root@SHIVAAY:/# cat > dbda2.txt
one
two
three
four
five
six
root@SHIVAAY:/# gzip dbda2.txt
root@SHIVAAY:/# ls
bin   cdac      dbda2.txt.gz  etc      home  kru      lib32   m-a    om    ramlu  sagar     sat5.txt  snap  temp.txt  var
boot  cdac.dir  dev           file1    init  krushna  lib64   media  opt   root   sat3.txt  satt      srv   tmp
c1    data.txt  dss           folder1  jay   lib      libx32  mnt    proc  run    sat4.txt  sbin      sys   usr
root@SHIVAAY:/#

3)

root@SHIVAAY:/# mkdir mass
root@SHIVAAY:/# cd mass
root@SHIVAAY:/mass# touch ff.txt
root@SHIVAAY:/mass# chmod 777 ff.txt
root@SHIVAAY:/mass# ls -l
total 0
-rwxrwxrwx 1 root root 0 Mar 10 23:07 ff.txt
root@SHIVAAY:/mass#

4)
root@SHIVAAY:/# chown cdac_kh ramlu
root@SHIVAAY:/# ls -l
total 620
lrwxrwxrwx  1 root    root      7 Feb 16 06:02 bin -> usr/bin
drwxr-xr-x  1 root    root   4096 Feb 16 06:16 boot
drwxr-xr-x  1 root    root   4096 Mar 10 17:25 c1
drwxr-xr-x  1 root    root   4096 Mar 10 19:34 cdac
drwxr-xr-x  1 root    root   4096 Mar 10 18:09 cdac.dir
-rw-r--r--  1 root    root      0 Mar 10 11:57 data.txt
-rw-r--r--  1 root    root     59 Mar 10 22:59 dbda2.txt.gz
drwxr-xr-x  1 root    root   4096 Mar 10 16:12 dev
drwxr-xr-x  1 root    root   4096 Mar  9 19:21 dss
drwxr-xr-x  1 root    root   4096 Mar 10 15:31 etc
drwxr-xr-x  1 root    root   4096 Mar 10 21:53 file1
drwxr-xr-x  1 root    root   4096 Mar 10 22:57 folder1
drwxr-xr-x  1 root    root   4096 Mar  9 15:56 home
-rwxr-xr-x  1 root    root 632096 Jan 28 15:06 init
drwxr-xr-x  1 root    root   4096 Mar 10 20:37 jay
drwxr-xr-x  1 root    root   4096 Mar 10 18:34 kru
drwxr-xr-x  1 root    root   4096 Mar 10 20:08 krushna
lrwxrwxrwx  1 root    root      7 Feb 16 06:02 lib -> usr/lib
lrwxrwxrwx  1 root    root      9 Feb 16 06:02 lib32 -> usr/lib32
lrwxrwxrwx  1 root    root      9 Feb 16 06:02 lib64 -> usr/lib64
lrwxrwxrwx  1 root    root     10 Feb 16 06:02 libx32 -> usr/libx32
-rw-r--r--  1 root    root     11 Mar  9 19:39 m-a
drwxr-xr-x  1 root    root   4096 Mar 10 23:07 mass
drwxr-xr-x  1 root    root   4096 Feb 16 06:02 media
drwxr-xr-x  1 root    root   4096 Mar  8 16:45 mnt
drwxr-xr-x  1 root    root   4096 Mar 10 16:09 om
drwxr-xr-x  1 root    root   4096 Feb 16 06:02 opt
dr-xr-xr-x 13 root    root      0 Mar 10 15:31 proc
drwxr-xr-x  1 cdac_kh root   4096 Mar 10 20:34 ramlu
drwx------  1 root    root   4096 Mar 10 13:12 root
drwxr-xr-x  1 root    root   4096 Mar 10 15:42 run
drwxr-xr-x  1 root    root   4096 Mar 10 20:48 sagar
drwxr-xr-x  1 root    root   4096 Mar 10 07:49 sat3.txt
-rw-r--r--  1 root    root      0 Mar 10 07:50 sat4.txt
-rw-r--r--  1 root    root      7 Mar 10 05:33 sat5.txt
drwxr-xr-x  1 root    root   4096 Mar 10 19:49 satt
lrwxrwxrwx  1 root    root      8 Feb 16 06:02 sbin -> usr/sbin
drwxr-xr-x  1 root    root   4096 Feb 16 06:07 snap
drwxr-xr-x  1 root    root   4096 Feb 16 06:02 srv
dr-xr-xr-x 12 root    root      0 Mar 10 15:31 sys
-rw-r--r--  1 root    root     77 Mar 10 20:35 temp.txt
drwxrwxrwt  1 root    root   4096 Mar 10 17:42 tmp
drwxr-xr-x  1 root    root   4096 Feb 16 06:05 usr
drwxr-xr-x  1 root    root   4096 Feb 16 06:07 var
root@SHIVAAY:/#

**4) Question
cdac_kh@SHIVAAY:~$ cal
     March 2022
Su Mo Tu We Th Fr Sa
       1  2  3  4  5
 6  7  8  9 10 11 12
13 14 15 16 17 18 19
20 21 22 23 24 25 26
27 28 29 30 31

cdac_kh@SHIVAAY:~$ date
Fri Mar 11 06:53:41 IST 2022
cdac_kh@SHIVAAY:~$

2)

cdac_kh@SHIVAAY:/$ sudo date 0303101017
Fri Mar  3 10:10:00 IST 2017

3)
WHO(1)                                                                     User Commands                                                                     WHO(1)

NAME
       who - show who is logged on

SYNOPSIS
       who [OPTION]... [ FILE | ARG1 ARG2 ]

DESCRIPTION
       Print information about users who are currently logged in.

       -a, --all
              same as -b -d --login -p -r -t -T -u

       -b, --boot
              time of last system boot

       -d, --dead
              print dead processes

       -H, --heading
              print line of column headings

       --ips  print ips instead of hostnames. with --lookup, canonicalizes based on stored IP, if available, rather than stored hostname

       -l, --login
              print system login processes

       --lookup
              attempt to canonicalize hostnames via DNS

       -m     only hostname and user associated with stdin

       -p, --process
              print active processes spawned by init

       -q, --count
              all login names and number of users logged on

       -r, --runlevel
              print current runlevel


----whoami
WHOAMI(1)                                                                  User Commands                                                                  WHOAMI(1)

NAME
       whoami - print effective userid

SYNOPSIS
       whoami [OPTION]...

DESCRIPTION
       Print the user name associated with the current effective user ID.  Same as id -un.

       --help display this help and exit

       --version
              output version information and exit

AUTHOR
       Written by Richard Mlynarik.

REPORTING BUGS
       GNU coreutils online help: <https://www.gnu.org/software/coreutils/>
       Report whoami translation bugs to <https://translationproject.org/team/>

COPYRIGHT
       Copyright © 2018 Free Software Foundation, Inc.  License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
       This is free software: you are free to change and redistribute it.  There is NO WARRANTY, to the extent permitted by law.

SEE ALSO
       Full documentation at: <https://www.gnu.org/software/coreutils/whoami>
       or available locally via: info '(coreutils) whoami invocation'

GNU coreutils 8.30                                                         September 2019                                                                 WHOAMI(1)
 
====whatis
WHATIS(1)                                                                Manual pager utils                                                               WHATIS(1)

NAME
       whatis - display one-line manual page descriptions

SYNOPSIS
       whatis [-dlv?V] [-r|-w] [-s list] [-m system[,...]] [-M path] [-L locale] [-C file] name ...

DESCRIPTION
       Each  manual  page has a short description available within it.  whatis searches the manual page names and displays the manual page descriptions of any name
       matched.

       name may contain wildcards (-w) or be a regular expression (-r).  Using these options, it may be necessary to quote the name or escape (\) the special char‐
       acters to stop the shell from interpreting them.

       index  databases  are used during the search, and are updated by the mandb program.  Depending on your installation, this may be run by a periodic cron job,
       or may need to be run manually after new manual pages have been installed.  To produce an old style text whatis database from the relative  index  database,
       issue the command:

       whatis -M manpath -w '*' | sort > manpath/whatis

       where manpath is a manual page hierarchy such as /usr/man.

OPTIONS
       -d, --debug
              Print debugging information.

       -v, --verbose
              Print verbose warning messages.

       -r, --regex
              Interpret each name as a regular expression.  If a name matches any part of a page name, a match will be made.  This option causes whatis to be some‐
              what slower due to the nature of database searches.

       -w, --wildcard
              Interpret each name as a pattern containing shell style wildcards.  For a match to be made, an expanded name must match the entire page  name.   This
              option causes whatis to be somewhat slower due to the nature of database searches.

       -l, --long
              Do  not  trim  output to the terminal width.  Normally, output will be truncated to the terminal width to avoid ugly results from poorly-written NAME
              sections.

====whereis
WHEREIS(1)                                                                 User Commands                                                                 WHEREIS(1)

NAME
       whereis - locate the binary, source, and manual page files for a command

SYNOPSIS
       whereis [options] [-BMS directory... -f] name...

DESCRIPTION
       whereis  locates  the binary, source and manual files for the specified command names.  The supplied names are first stripped of leading pathname components
       and any (single) trailing extension of the form .ext (for example: .c) Prefixes of s.  resulting from use of  source  code  control  are  also  dealt  with.
       whereis then attempts to locate the desired program in the standard Linux places, and in the places specified by $PATH and $MANPATH.

       The  search  restrictions  (options -b, -m and -s) are cumulative and apply to the subsequent name patterns on the command line.  Any new search restriction
       resets the search mask.  For example,

              whereis -bm ls tr -m gcc

       searches for "ls" and "tr" binaries and man pages, and for "gcc" man pages only.

       The options -B, -M and -S reset search paths for the subsequent name patterns.  For example,

              whereis -m ls -M /usr/share/man/man1 -f cal

       searches for "ls" man pages in all default paths, but for "cal" in the /usr/share/man/man1 directory only.

OPTIONS
       -b     Search for binaries.

       -m     Search for manuals.

       -s     Search for sources.

       -u     Only show the command names that have unusual entries.  A command is said to be unusual if it does not have just one entry  of  each  explicitly  re‐
              quested type.  Thus 'whereis -m -u *' asks for those files in the current directory which have no documentation file, or more than one.

       -B list
              Limit the places where whereis searches for binaries, by a whitespace-separated list of directories.

       -M list
              Limit the places where whereis searches for manuals and documentation in Info format, by a whitespace-separated list of directories.

       -S list
 Manual page     













